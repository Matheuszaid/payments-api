# Nginx configuration for payments-api
# Place this file in /etc/nginx/sites-available/ and symlink to sites-enabled/
# Update server_name and ssl certificates as needed

upstream payments_api {
    server 127.0.0.1:8065;  # Adjust port based on your APP_PORT
    # Add more servers for load balancing if needed
    # server 127.0.0.1:8066;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

server {
    listen 80;
    server_name payments-api.example.com;  # Update with your domain

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name payments-api.example.com;  # Update with your domain

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/payments-api.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/payments-api.example.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'";

    # Logging
    access_log /var/log/nginx/payments-api.access.log;
    error_log /var/log/nginx/payments-api.error.log;

    # Client settings
    client_max_body_size 1M;
    client_body_timeout 30s;
    client_header_timeout 30s;

    # Webhook endpoints (higher rate limits for legitimate webhook traffic)
    location /webhooks/ {
        # Rate limiting for webhooks
        limit_req zone=webhook_limit burst=20 nodelay;

        # Preserve original headers for signature verification
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Preserve webhook headers
        proxy_pass_request_headers on;

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering (disabled for webhooks to reduce latency)
        proxy_buffering off;
        proxy_request_buffering off;

        proxy_pass http://payments_api;
    }

    # Health check endpoints (no rate limiting)
    location ~ ^/(health|ready)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        proxy_pass http://payments_api;
    }

    # API endpoints (moderate rate limiting)
    location /admin/ {
        # Restrict admin endpoints to specific IPs (optional)
        # allow 192.168.1.0/24;
        # deny all;

        limit_req zone=api_limit burst=10 nodelay;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        proxy_pass http://payments_api;
    }

    # Metrics endpoint (restrict access)
    location /metrics {
        # Restrict to monitoring systems
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://payments_api;
    }

    # Reconciliation endpoint
    location /reconciliation/ {
        limit_req zone=api_limit burst=5 nodelay;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;  # Longer timeout for reconciliation
        proxy_read_timeout 60s;

        proxy_pass http://payments_api;
    }

    # OpenAPI documentation
    location ~ ^/(docs|openapi\.json)$ {
        # Optional: restrict documentation access
        # allow 192.168.1.0/24;
        # deny all;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://payments_api;
    }

    # Default location (catch-all)
    location / {
        limit_req zone=api_limit burst=10 nodelay;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        proxy_pass http://payments_api;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Additional server block for internal health checks (optional)
server {
    listen 127.0.0.1:8080;
    server_name localhost;

    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location /payments-health {
        proxy_pass http://payments_api/health;
        access_log off;
    }
}
{
  "openapi": "3.1.0",
  "info": {
    "title": "Payments Reliability API",
    "description": "Production-grade webhook processing service for Stripe and PayPal",
    "version": "0.2.0-rc"
  },
  "paths": {
    "/webhooks/stripe": {
      "post": {
        "summary": "Stripe Webhook",
        "description": "Process Stripe webhook with signature verification.\n\nValidates webhook signature using Stripe's official scheme,\nensures idempotency, and persists event data.",
        "operationId": "stripe_webhook_webhooks_stripe_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/paypal": {
      "post": {
        "summary": "Paypal Webhook",
        "description": "Process PayPal webhook with signature verification.\n\nSupports both real PayPal verification API and demo HMAC mode\nfor development. Ensures idempotency and persists event data.",
        "operationId": "paypal_webhook_webhooks_paypal_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Liveness check endpoint.",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Readiness",
        "description": "Readiness check endpoint with dependency checks.",
        "operationId": "readiness_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadinessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Prometheus Metrics",
        "description": "Prometheus metrics endpoint.",
        "operationId": "prometheus_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics/json": {
      "get": {
        "summary": "Json Metrics",
        "description": "JSON metrics endpoint for debugging.",
        "operationId": "json_metrics_metrics_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reconciliation/summary": {
      "get": {
        "summary": "Reconciliation Summary",
        "description": "Get reconciliation summary for the specified time window.\n\nArgs:\n    hours_back: Number of hours to look back (1-168)\n\n    Returns:\n        Reconciliation summary with event counts and anomalies",
        "operationId": "reconciliation_summary_reconciliation_summary_get",
        "parameters": [
          {
            "name": "hours_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Hours Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReconciliationSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/events": {
      "get": {
        "summary": "List Events",
        "description": "List recent payment events for debugging.",
        "operationId": "list_events_admin_events_get",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "API version"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version"
        ],
        "title": "HealthResponse",
        "description": "Health check response."
      },
      "MetricsResponse": {
        "properties": {
          "counters": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Counters",
            "description": "Event counters"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Metrics timestamp"
          }
        },
        "type": "object",
        "required": [
          "counters",
          "timestamp"
        ],
        "title": "MetricsResponse",
        "description": "Metrics response."
      },
      "ReadinessResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service readiness status"
          },
          "checks": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Checks",
            "description": "Individual check results"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          }
        },
        "type": "object",
        "required": [
          "status",
          "checks",
          "timestamp"
        ],
        "title": "ReadinessResponse",
        "description": "Readiness check response."
      },
      "ReconciliationSummary": {
        "properties": {
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start",
            "description": "Summary period start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End",
            "description": "Summary period end"
          },
          "total_events": {
            "type": "integer",
            "title": "Total Events",
            "description": "Total events processed"
          },
          "events_by_provider": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Events By Provider",
            "description": "Events grouped by provider"
          },
          "events_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Events By Type",
            "description": "Events grouped by type"
          },
          "anomalies": {
            "items": {},
            "type": "array",
            "title": "Anomalies",
            "description": "Detected anomalies"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At",
            "description": "Summary generation time"
          }
        },
        "type": "object",
        "required": [
          "period_start",
          "period_end",
          "total_events",
          "events_by_provider",
          "events_by_type",
          "anomalies",
          "generated_at"
        ],
        "title": "ReconciliationSummary",
        "description": "Reconciliation summary response."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Processing status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id",
            "description": "Event ID if available"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "WebhookResponse",
        "description": "Standard webhook response format."
      }
    }
  }
}